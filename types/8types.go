package types

import (
	"fmt"
)

const RUNNING = true
const PAUSED = false
const PROGRAM_ADDR = 0x200
const FONT_ADDR = 0x050

type Chip8 struct {
	Emu_state   bool
	V           [16]byte
	Ram         [4096]byte
	Display     [32][64]bool
	Key_board   [16]bool
	PC          uint16
	I           uint16
	Stack       [16]uint16
	Sp          int16
	Sound_Timer byte
	Delay_Timer byte
	Has_Drawn   bool
	Frames      int
}

func (Self *Chip8) Print_State() {
	fmt.Println(Self.V)
	fmt.Println(Self.Ram)
	fmt.Println(Self.Display)
	fmt.Println(Self.PC)
	fmt.Println(Self.Stack)
	fmt.Println(Self.I)
}
func (Self Chip8) Print_Current_Exectuted_Instruction() {
	fmt.Printf("Program Counter: %x\n", Self.PC)
	fmt.Printf("Current Instruction: %x%x \n", Self.Ram[Self.PC], Self.Ram[Self.PC+1])
}

var Font_Set = [80]byte{
	0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
	0x20, 0x60, 0x20, 0x20, 0x70, // 1
	0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
	0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
	0x90, 0x90, 0xF0, 0x10, 0x10, // 4
	0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
	0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
	0xF0, 0x10, 0x20, 0x40, 0x40, // 7
	0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
	0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
	0xF0, 0x90, 0xF0, 0x90, 0x90, // A
	0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
	0xF0, 0x80, 0x80, 0x80, 0xF0, // C
	0xE0, 0x90, 0x90, 0x90, 0xE0, // D
	0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
	0xF0, 0x80, 0xF0, 0x80, 0x80, // F
}
